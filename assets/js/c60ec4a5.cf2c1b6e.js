"use strict";(self.webpackChunkdagger=self.webpackChunkdagger||[]).push([[5783],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return u}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return t?n.createElement(f,s(s({ref:r},c),{},{components:t})):n.createElement(f,s({ref:r},c))}));function u(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6208:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),s=["components"],i={},l="Pre Processors",p={unversionedId:"advance/pre_processor",id:"advance/pre_processor",isDocsHomePage:!1,title:"Pre Processors",description:"Pre processors enable the users to add Flink operators/transformations before passing on the stream to the SQL query. Each stream registered on dagger can have chained pre processors. They will run and transform the data before SQL processing.",source:"@site/docs/advance/pre_processor.md",sourceDirName:"advance",slug:"/advance/pre_processor",permalink:"/dagger/docs/advance/pre_processor",editUrl:"https://github.com/odpf/dagger/edit/master/docs/docs/advance/pre_processor.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Overview",permalink:"/dagger/docs/advance/overview"},next:{title:"Post Processors",permalink:"/dagger/docs/advance/post_processor"}},c=[{value:"<code>table_transformers</code>",id:"table_transformers",children:[]},{value:"<code>table_name</code>",id:"table_name",children:[]},{value:"<code>transformers</code>",id:"transformers",children:[]},{value:"<code>transformation_class</code>",id:"transformation_class",children:[]},{value:"<code>transformation_arguments</code>",id:"transformation_arguments",children:[]}],d={toc:c};function m(e){var r=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pre-processors"},"Pre Processors"),(0,o.kt)("p",null,"Pre processors enable the users to add Flink ",(0,o.kt)("a",{parentName:"p",href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/stream/operators"},"operators/transformations")," before passing on the stream to the SQL query. Each stream registered on dagger can have chained pre processors. They will run and transform the data before SQL processing."),(0,o.kt)("h1",{id:"type-of-preprocessors"},"Type of Preprocessors"),(0,o.kt)("p",null,"Currently, there is only one type of pre-processor. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/guides/use_transformer"},"Transformers"))),(0,o.kt)("h1",{id:"data-flow-in-preprocessors"},"Data flow in preprocessors"),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"/img/pre-processor.png"})),(0,o.kt)("p",null,"In the above diagram:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Data is getting ingested from two different streams."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"InvalidRecordFilterTransformer")," is applied on both the streams in order to filter out invalid records."),(0,o.kt)("li",{parentName:"ul"},"Then the filtered records are passed to further operators."),(0,o.kt)("li",{parentName:"ul"},"Data is finally pushed to sink.")),(0,o.kt)("h1",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Following variables need to be configured as part of ",(0,o.kt)("a",{parentName:"p",href:"/dagger/docs/reference/configuration#processor_preprocessor_config"},"PROCESSOR_PREPROCESSOR_CONFIG")," JSON"),(0,o.kt)("h2",{id:"table_transformers"},(0,o.kt)("inlineCode",{parentName:"h2"},"table_transformers")),(0,o.kt)("p",null,"A list of transformer configs."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Example value: ",(0,o.kt)("inlineCode",{parentName:"li"},'[{"table_name": "testtable","transformers": [{"transformation_class": "io.odpf.dagger.functions.transformers.InvalidRecordFilterTransformer"}]}]')),(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"required"))),(0,o.kt)("h2",{id:"table_name"},(0,o.kt)("inlineCode",{parentName:"h2"},"table_name")),(0,o.kt)("p",null,"Table name for the transformer."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Example value: ",(0,o.kt)("inlineCode",{parentName:"li"},"testtable")),(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"required"))),(0,o.kt)("h2",{id:"transformers"},(0,o.kt)("inlineCode",{parentName:"h2"},"transformers")),(0,o.kt)("p",null,"List of transformers per table."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Example value: ",(0,o.kt)("inlineCode",{parentName:"li"},'[{"transformation_class": "io.odpf.dagger.functions.transformers.InvalidRecordFilterTransformer"}]')),(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"required"))),(0,o.kt)("h2",{id:"transformation_class"},(0,o.kt)("inlineCode",{parentName:"h2"},"transformation_class")),(0,o.kt)("p",null,"Fully qualified name of the class to be used for transformation."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Example value: ",(0,o.kt)("inlineCode",{parentName:"li"},'"io.odpf.dagger.functions.transformers.InvalidRecordFilterTransformer"')),(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"required"))),(0,o.kt)("h2",{id:"transformation_arguments"},(0,o.kt)("inlineCode",{parentName:"h2"},"transformation_arguments")),(0,o.kt)("p",null,"A key-value map required for parameters required for the custom transformation class."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Example value: ",(0,o.kt)("inlineCode",{parentName:"li"},'{"table_name": "testtable"}')),(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"optional"))),(0,o.kt)("h1",{id:"sample-config"},"Sample config"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-properties"},'FLINK_SQL_QUERY = "SELECT data_1, data_2, event_timestamp from data_stream"\nPROCESSOR_PREPROCESSOR_ENABLE = true\nPROCESSOR_PREPROCESSOR_CONFIG = {\n  "table_transformers": [{\n    "table_name": "data_stream",\n    "transformers": [{\n      "transformation_class": "io.odpf.dagger.functions.transformers.InvalidRecordFilterTransformer"\n    }]\n  }]\n}\n')))}m.isMDXComponent=!0}}]);