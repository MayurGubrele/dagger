"use strict";(self.webpackChunkdagger=self.webpackChunkdagger||[]).push([[8999],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(r),f=o,g=d["".concat(s,".").concat(f)]||d[f]||p[f]||c;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2822:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),c=(r(7294),r(3905)),i=["components"],a={},s="Overview",l={unversionedId:"concepts/overview",id:"concepts/overview",isDocsHomePage:!1,title:"Overview",description:"The following section sheds light on some basic concepts and several components of Dagger.",source:"@site/docs/concepts/overview.md",sourceDirName:"concepts",slug:"/concepts/overview",permalink:"/dagger/docs/concepts/overview",editUrl:"https://github.com/odpf/dagger/edit/master/docs/docs/concepts/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Troubleshooting",permalink:"/dagger/docs/guides/troubleshooting"},next:{title:"Basics",permalink:"/dagger/docs/concepts/basics"}},u=[{value:"Architecture",id:"architecture",children:[]},{value:"Basics",id:"basics",children:[]},{value:"Lifecycle",id:"lifecycle",children:[]}],p={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"overview"},"Overview"),(0,c.kt)("p",null,"The following section sheds light on some basic concepts and several components of Dagger."),(0,c.kt)("h3",{id:"architecture"},(0,c.kt)("a",{parentName:"h3",href:"/dagger/docs/concepts/architecture"},"Architecture")),(0,c.kt)("p",null,"Describes some of the internal logical and infrastructural blocks of Dagger and how they are interconnected."),(0,c.kt)("h3",{id:"basics"},(0,c.kt)("a",{parentName:"h3",href:"/dagger/docs/concepts/basics"},"Basics")),(0,c.kt)("p",null,"A brief introduction to stream processing with some basic terminologies and keywords in Dagger."),(0,c.kt)("h3",{id:"lifecycle"},(0,c.kt)("a",{parentName:"h3",href:"/dagger/docs/concepts/lifecycle"},"Lifecycle")),(0,c.kt)("p",null,"Explains how unbounded data goes through internal processing pipelines before materializing the results."))}d.isMDXComponent=!0}}]);