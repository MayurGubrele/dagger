"use strict";(self.webpackChunkdagger=self.webpackChunkdagger||[]).push([[9671],{3905:function(e,r,t){t.d(r,{Zo:function(){return d},kt:function(){return g}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(t),g=a,f=p["".concat(c,".").concat(g)]||p[g]||u[g]||o;return t?n.createElement(f,i(i({ref:r},d),{},{components:t})):n.createElement(f,i({ref:r},d))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9881:function(e,r,t){t.r(r),t.d(r,{contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={sidebar_position:1},c="Introduction",l={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction",description:"Dagger aka Data Aggregator is an easy-to-use, configuration over code, cloud-native framework built on top of Apache Flink",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/dagger/docs/intro",editUrl:"https://github.com/odpf/dagger/edit/master/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",next:{title:"Roadmap",permalink:"/dagger/docs/roadmap"}},d=[{value:"Key Features",id:"key-features",children:[]},{value:"Usecases",id:"usecases",children:[]},{value:"Where to go from here",id:"where-to-go-from-here",children:[]}],u={toc:d};function p(e){var r=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,s,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Dagger aka Data Aggregator is an easy-to-use, configuration over code, cloud-native framework built on top of Apache Flink\nfor stateful processing of streaming data. With Dagger, you don't need to write custom applications or complicated code to process data in real-time. Instead, you can write SQL queries and UDFs to do the processing and analysis on streaming data."),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(4454).Z})),(0,o.kt)("h2",{id:"key-features"},"Key Features"),(0,o.kt)("p",null,"Discover why to use Dagger"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Processing:")," Dagger can transform, aggregate, join and enrich Protobuf data in real-time."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Scale:")," Dagger scales in an instant, both vertically and horizontally for high performance streaming sink and zero data drops."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Extensibility:")," Add your own sink to dagger with a clearly defined interface or choose from already provided ones."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Flexibility:")," Add custom business logic in form of plugins ","(","UDFs, Transformers, Preprocessors and Post Processors",")"," independent of the core logic."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Metrics:")," Always know what\u2019s going on with your deployment with built-in ",(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/reference/metrics"},"monitoring")," of throughput, response times, errors and more.")),(0,o.kt)("h2",{id:"usecases"},"Usecases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/table/sql.html"},"Map reduce with SQL")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/table/sql.html"},"Aggregation with SQL"),", ",(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/guides/use_udf"},"UDFs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/advance/post_processor"},"Enrichment with Post Processors")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/reference/transformers#HashTransformer"},"Data Masking with Hash Transformer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/reference/transformers#DeDuplicationTransformer"},"Data Deduplication with Transformer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/advance/longbow"},"Realtime long window processing with Longbow"))),(0,o.kt)("p",null,"To know more, follow the detailed ",(0,o.kt)("a",{parentName:"p",href:"https://odpf.gitbook.io/dagger"},"documentation"),"."),(0,o.kt)("h2",{id:"where-to-go-from-here"},"Where to go from here"),(0,o.kt)("p",null,"Explore the following resources to get started with Dagger:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/guides/overview"},"Guides")," provides guidance on ",(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/guides/overview"},"creating Dagger")," with different sinks."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/concepts/overview"},"Concepts")," describes all important Dagger concepts."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/advance/overview"},"Advance")," contains details regarding advance features of Dagger."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/reference/overview"},"Reference")," contains details about configurations, metrics and other aspects of Dagger."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/contribute/contribution"},"Contribute")," contains resources for anyone who wants to contribute to Dagger."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dagger/docs/usecase/overview"},"Usecase")," describes examples use cases which can be solved via Dagger.")))}p.isMDXComponent=!0},4454:function(e,r,t){r.Z=t.p+"assets/images/overview-9dfb8320af0d5738b0493b704a011908.svg"}}]);